# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: quarkchaindocker/pyquarkchain:mainnet1.1.1
    working_directory: /code/pyquarkchain

    steps:
      - checkout

      # Download and cache python modules
      - restore_cache:
          keys:
          - pyquarkchain-dep-{{ checksum "requirements.txt" }}

      - run:
          name: Install Project Dependencies
          command: |
            pip3 install -e .

      - save_cache:
          paths:
            - /usr/local
          key: pyquarkchain-dep-{{ checksum "requirements.txt" }}

  test:
    docker:
      - image: quarkchaindocker/pyquarkchain:mainnet1.1.1
    parallelism: 3
    working_directory: /code/pyquarkchain

    steps:
      - checkout

      - restore_cache:
          keys:
          - pyquarkchain-dep-{{ checksum "requirements.txt" }}

      # Run tests!
      - run:
          name: Run py.test tests excluding integration test
          command: |
            if [[ $CIRCLE_NODE_INDEX = 0 ]]; then python3 -m pytest --ignore quarkchain/cluster/tests/test_cluster.py --timeout=30; fi

      - run:
          name: Run py.test tests only on integration test
          command: |
            if [[ $CIRCLE_NODE_INDEX = 1 ]]; then python3 -m pytest quarkchain/cluster/tests/test_cluster.py --timeout=90; fi

      - run:
          name: Run EVM tests
          command: |
            if [[ $CIRCLE_NODE_INDEX = 2 ]]; then python3 quarkchain/evm/tests/test_state.py fixtures/GeneralStateTests/; fi

      - run:
          name: Run QuarkChain-specific EVM tests
          command: |
            if [[ $CIRCLE_NODE_INDEX = 2 ]]; then python3 quarkchain/evm/tests/test_state.py fixtures/QuarkChainStateTests/; fi

  check-db:
    docker:
      - image: quarkchaindocker/pyquarkchain:mainnet1.1.1

    working_directory: /code/pyquarkchain

    steps:
      - checkout

      - restore_cache:
          keys:
          - pyquarkchain-dep-{{ checksum "requirements.txt" }}

      - run:
          name: Download DB snapshot
          command: |
            cd ..
            curl -s https://s3-us-west-2.amazonaws.com/qkcmainnet/data/`curl https://s3-us-west-2.amazonaws.com/qkcmainnet/data/LATEST`.tar.gz --output data.tar.gz
            tar xvfz data.tar.gz
            rm data.tar.gz

      - run:
          name: Check DB
          command: |
            QKC__QUARKCHAIN__DISABLE_POW_CHECK=True ./run_cluster.sh --check_db=True --check_db_rblock_batch=100

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
  nightly:
    triggers:
      - schedule:
          cron: "25 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - check-db:
          requires:
            - build
