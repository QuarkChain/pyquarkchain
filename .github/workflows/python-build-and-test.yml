name: Python unit tests

on: [push]

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
#  test-without-integration:
#    runs-on: ubuntu-latest
#    container: quarkchaindocker/pyquarkchain:mainnet1.1.1
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install Project Dependencies
#      run: PYTHONPATH=/code/pyquarkchain pip3 install -e .
#
#    - name: Run py.test tests excluding integration test
#      run: |
#        cd qkchash && make clean && make && cd -
#        python3 -m pytest --ignore quarkchain/cluster/tests/test_cluster.py
#
#  EVM-tests-runner-1:
#    runs-on: ubuntu-latest
#    container: quarkchaindocker/pyquarkchain:mainnet1.1.1
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install Project Dependencies
#      run: PYTHONPATH=/code/pyquarkchain pip3 install -e .
#
#    - name: Run EVM tests - runner 1
#      run: |
#        find fixtures/GeneralStateTests -name "*.json" | sort | sed -n 'n;p' | xargs cp --parents -t /tmp/ && python3 quarkchain/evm/tests/test_state.py /tmp/fixtures/GeneralStateTests > /dev/null;
#
#  EVM-tests-runner-2:
#    runs-on: ubuntu-latest
#    container: quarkchaindocker/pyquarkchain:mainnet1.1.1
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install Project Dependencies
#      run: PYTHONPATH=/code/pyquarkchain pip3 install -e .
#
#    - name: Run EVM tests - runner 2
#      run: |
#        find fixtures/GeneralStateTests -name "*.json" | sort | sed -n 'p;n' | xargs cp --parents -t /tmp/ && python3 quarkchain/evm/tests/test_state.py /tmp/fixtures/GeneralStateTests > /dev/null;
#
#  test-with-integration-and-specific:
#    runs-on: ubuntu-latest
#    container: quarkchaindocker/pyquarkchain:mainnet1.1.1
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install Project Dependencies
#      run: PYTHONPATH=/code/pyquarkchain pip3 install -e .
#
#    - name: Run py.test tests only on integration test
#      run: |
#        cd qkchash && make clean && make && cd -
#        python3 -m pytest quarkchain/cluster/tests/test_cluster.py
#
#    - name: Run QuarkChain-specific EVM tests
#      run: |
#        python3 quarkchain/evm/tests/test_state.py fixtures/QuarkChainStateTests/

  download-snapshot:
    runs-on: ubuntu-latest
    container: quarkchaindocker/pyquarkchain:mainnet1.1.1

    steps:
    - uses: actions/checkout@v2
    - name: create workspace
      run: mkdir -p tmp/workspace

    - name: Download DB snapshot
      run: |
        curl -s https://s3-us-west-2.amazonaws.com/qkcmainnet/data/sample-data.tar.gz --output data.tar.gz
        tar xvfz data.tar.gz
        rm data.tar.gz && mv data tmp/workspace/

    - name: Save cache
      uses: actions/upload-artifact@v1
      with:
        name: db
        path: tmp/workspace/data
      timeout-minutes: 120

  check-db:
    needs: download-snapshot
    runs-on: ubuntu-latest
    container: quarkchaindocker/pyquarkchain:mainnet1.1.1

    steps:
    - uses: actions/checkout@v2
    - name: restore cache
      uses: actions/download-artifact@v1
      with:
        name: db
        path: tmp/workspace/data

    - name: Move data
      run: |
        mkdir -p quarkchain/cluster/qkc-data
        cd tmp/workspace && mv data mainnet && cd -
        mv tmp/workspace/mainnet quarkchain/cluster/qkc-data/

    - name: Check DB
      run: |
        cd qkchash && make clean && make && cd -
        PYTHONPATH=/code/pyquarkchain
        height=$(python quarkchain/tools/db_browser.py --cluster_config=/code/pyquarkchain/mainnet/singularity/cluster_config_template.json root_print_tip 2> /dev/null | grep "height" | awk "{print \$2}" | sed "s/,$//")
        lo=$(( height / CIRCLE_NODE_TOTAL * CIRCLE_NODE_INDEX ))
        hi=$(( height / CIRCLE_NODE_TOTAL * (CIRCLE_NODE_INDEX + 1) + 4 ))
        echo "checking: $hi -> $lo"
        QKC__QUARKCHAIN__DISABLE_POW_CHECK=True ./run_cluster.sh --check_db=True --check_db_rblock_batch=100 --check_db_rblock_from=$hi --check_db_rblock_to=$lo
